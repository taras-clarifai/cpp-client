// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/inference_coordinator/inference_coordinator.proto

#include "proto/inference_coordinator/inference_coordinator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListSpiresFilter_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceObjectsStatus_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto;
class DeploySpireRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeploySpireRequest> _instance;
} _DeploySpireRequest_default_instance_;
class DeploySpireResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeploySpireResponse> _instance;
} _DeploySpireResponse_default_instance_;
class DeleteSpireRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteSpireRequest> _instance;
} _DeleteSpireRequest_default_instance_;
class DeleteSpireResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteSpireResponse> _instance;
} _DeleteSpireResponse_default_instance_;
class GetSpireDeployStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSpireDeployStatusRequest> _instance;
} _GetSpireDeployStatusRequest_default_instance_;
class GetSpireDeployStatusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSpireDeployStatusResponse> _instance;
} _GetSpireDeployStatusResponse_default_instance_;
class ResourceObjectsStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceObjectsStatus> _instance;
} _ResourceObjectsStatus_default_instance_;
class ListSpiresRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListSpiresRequest> _instance;
} _ListSpiresRequest_default_instance_;
class ListSpiresFilterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListSpiresFilter> _instance;
} _ListSpiresFilter_default_instance_;
class ListSpiresResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListSpiresResponse> _instance;
} _ListSpiresResponse_default_instance_;
static void InitDefaultsscc_info_DeleteSpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeleteSpireRequest_default_instance_;
    new (ptr) ::DeleteSpireRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeleteSpireRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteSpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DeleteSpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_DeleteSpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeleteSpireResponse_default_instance_;
    new (ptr) ::DeleteSpireResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeleteSpireResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteSpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DeleteSpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_DeploySpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeploySpireRequest_default_instance_;
    new (ptr) ::DeploySpireRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeploySpireRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeploySpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DeploySpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_DeploySpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeploySpireResponse_default_instance_;
    new (ptr) ::DeploySpireResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeploySpireResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeploySpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DeploySpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_GetSpireDeployStatusRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetSpireDeployStatusRequest_default_instance_;
    new (ptr) ::GetSpireDeployStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetSpireDeployStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSpireDeployStatusRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_GetSpireDeployStatusRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_GetSpireDeployStatusResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetSpireDeployStatusResponse_default_instance_;
    new (ptr) ::GetSpireDeployStatusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetSpireDeployStatusResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetSpireDeployStatusResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_GetSpireDeployStatusResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_ResourceObjectsStatus_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,}};

static void InitDefaultsscc_info_ListSpiresFilter_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ListSpiresFilter_default_instance_;
    new (ptr) ::ListSpiresFilter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ListSpiresFilter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListSpiresFilter_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ListSpiresFilter_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {}};

static void InitDefaultsscc_info_ListSpiresRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ListSpiresRequest_default_instance_;
    new (ptr) ::ListSpiresRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ListSpiresRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ListSpiresRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ListSpiresRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_ListSpiresFilter_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,}};

static void InitDefaultsscc_info_ListSpiresResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ListSpiresResponse_default_instance_;
    new (ptr) ::ListSpiresResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ListSpiresResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListSpiresResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ListSpiresResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_ResourceObjectsStatus_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResourceObjectsStatus_default_instance_;
    new (ptr) ::ResourceObjectsStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResourceObjectsStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceObjectsStatus_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ResourceObjectsStatus_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeploySpireRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeploySpireRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::DeploySpireRequest, spire_name_),
  PROTOBUF_FIELD_OFFSET(::DeploySpireRequest, spire_config_location_),
  PROTOBUF_FIELD_OFFSET(::DeploySpireRequest, checkpoint_root_),
  PROTOBUF_FIELD_OFFSET(::DeploySpireRequest, jwt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeploySpireResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeploySpireResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeleteSpireRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeleteSpireRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::DeleteSpireRequest, spire_name_),
  PROTOBUF_FIELD_OFFSET(::DeleteSpireRequest, jwt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeleteSpireResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeleteSpireResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetSpireDeployStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetSpireDeployStatusRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::GetSpireDeployStatusRequest, spire_name_),
  PROTOBUF_FIELD_OFFSET(::GetSpireDeployStatusRequest, jwt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetSpireDeployStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetSpireDeployStatusResponse, status_),
  PROTOBUF_FIELD_OFFSET(::GetSpireDeployStatusResponse, resource_objects_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResourceObjectsStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResourceObjectsStatus, service_running_),
  PROTOBUF_FIELD_OFFSET(::ResourceObjectsStatus, deployment_running_),
  PROTOBUF_FIELD_OFFSET(::ResourceObjectsStatus, hpa_running_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ListSpiresRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ListSpiresRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::ListSpiresRequest, jwt_),
  PROTOBUF_FIELD_OFFSET(::ListSpiresRequest, filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ListSpiresFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ListSpiresFilter, has_min_replicas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ListSpiresResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ListSpiresResponse, status_),
  PROTOBUF_FIELD_OFFSET(::ListSpiresResponse, spire_names_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DeploySpireRequest)},
  { 10, -1, sizeof(::DeploySpireResponse)},
  { 16, -1, sizeof(::DeleteSpireRequest)},
  { 24, -1, sizeof(::DeleteSpireResponse)},
  { 30, -1, sizeof(::GetSpireDeployStatusRequest)},
  { 38, -1, sizeof(::GetSpireDeployStatusResponse)},
  { 45, -1, sizeof(::ResourceObjectsStatus)},
  { 53, -1, sizeof(::ListSpiresRequest)},
  { 61, -1, sizeof(::ListSpiresFilter)},
  { 67, -1, sizeof(::ListSpiresResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DeploySpireRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DeploySpireResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DeleteSpireRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DeleteSpireResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetSpireDeployStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetSpireDeployStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ResourceObjectsStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ListSpiresRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ListSpiresFilter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ListSpiresResponse_default_instance_),
};

const char descriptor_table_protodef_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7proto/inference_coordinator/inference_"
  "coordinator.proto\032\036proto/utils/request_m"
  "eta.proto\"\211\001\n\022DeploySpireRequest\022\032\n\004meta"
  "\030\001 \001(\0132\014.RequestMeta\022\022\n\nspire_name\030\002 \001(\t"
  "\022\035\n\025spire_config_location\030\003 \001(\t\022\027\n\017check"
  "point_root\030\004 \001(\t\022\013\n\003jwt\030\005 \001(\t\"6\n\023DeployS"
  "pireResponse\022\037\n\006status\030\001 \001(\0132\017.ResponseS"
  "tatus\"Q\n\022DeleteSpireRequest\022\032\n\004meta\030\001 \001("
  "\0132\014.RequestMeta\022\022\n\nspire_name\030\002 \001(\t\022\013\n\003j"
  "wt\030\003 \001(\t\"6\n\023DeleteSpireResponse\022\037\n\006statu"
  "s\030\001 \001(\0132\017.ResponseStatus\"Z\n\033GetSpireDepl"
  "oyStatusRequest\022\032\n\004meta\030\001 \001(\0132\014.RequestM"
  "eta\022\022\n\nspire_name\030\002 \001(\t\022\013\n\003jwt\030\003 \001(\t\"x\n\034"
  "GetSpireDeployStatusResponse\022\037\n\006status\030\001"
  " \001(\0132\017.ResponseStatus\0227\n\027resource_object"
  "s_status\030\003 \001(\0132\026.ResourceObjectsStatus\"a"
  "\n\025ResourceObjectsStatus\022\027\n\017service_runni"
  "ng\030\001 \001(\010\022\032\n\022deployment_running\030\002 \001(\010\022\023\n\013"
  "hpa_running\030\003 \001(\010\"_\n\021ListSpiresRequest\022\032"
  "\n\004meta\030\001 \001(\0132\014.RequestMeta\022\013\n\003jwt\030\002 \001(\t\022"
  "!\n\006filter\030\003 \001(\0132\021.ListSpiresFilter\",\n\020Li"
  "stSpiresFilter\022\030\n\020has_min_replicas\030\001 \001(\010"
  "\"J\n\022ListSpiresResponse\022\037\n\006status\030\001 \001(\0132\017"
  ".ResponseStatus\022\023\n\013spire_names\030\002 \003(\t2\236\002\n"
  "\024InferenceCoordinator\022:\n\013DeploySpire\022\023.D"
  "eploySpireRequest\032\024.DeploySpireResponse\""
  "\000\022:\n\013DeleteSpire\022\023.DeleteSpireRequest\032\024."
  "DeleteSpireResponse\"\000\022U\n\024GetSpireDeployS"
  "tatus\022\034.GetSpireDeployStatusRequest\032\035.Ge"
  "tSpireDeployStatusResponse\"\000\0227\n\nListSpir"
  "es\022\022.ListSpiresRequest\032\023.ListSpiresRespo"
  "nse\"\000B\027Z\025inference_coordinatorb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto_deps[1] = {
  &::descriptor_table_proto_2futils_2frequest_5fmeta_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto_sccs[10] = {
  &scc_info_DeleteSpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_DeleteSpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_DeploySpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_DeploySpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_GetSpireDeployStatusRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_GetSpireDeployStatusResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_ListSpiresFilter_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_ListSpiresRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_ListSpiresResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
  &scc_info_ResourceObjectsStatus_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto_once;
static bool descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto = {
  &descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto_initialized, descriptor_table_protodef_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto, "proto/inference_coordinator/inference_coordinator.proto", 1278,
  &descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto_once, descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto_sccs, descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto_deps, 10, 1,
  schemas, file_default_instances, TableStruct_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto::offsets,
  file_level_metadata_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto, 10, file_level_enum_descriptors_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto, file_level_service_descriptors_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto), true);

// ===================================================================

void DeploySpireRequest::InitAsDefaultInstance() {
  ::_DeploySpireRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class DeploySpireRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const DeploySpireRequest* msg);
};

const ::RequestMeta&
DeploySpireRequest::_Internal::meta(const DeploySpireRequest* msg) {
  return *msg->meta_;
}
void DeploySpireRequest::clear_meta() {
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
DeploySpireRequest::DeploySpireRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeploySpireRequest)
}
DeploySpireRequest::DeploySpireRequest(const DeploySpireRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  spire_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.spire_name().empty()) {
    spire_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spire_name_);
  }
  spire_config_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.spire_config_location().empty()) {
    spire_config_location_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spire_config_location_);
  }
  checkpoint_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.checkpoint_root().empty()) {
    checkpoint_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.checkpoint_root_);
  }
  jwt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.jwt().empty()) {
    jwt_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.jwt_);
  }
  if (from.has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:DeploySpireRequest)
}

void DeploySpireRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeploySpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  spire_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spire_config_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpoint_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  meta_ = nullptr;
}

DeploySpireRequest::~DeploySpireRequest() {
  // @@protoc_insertion_point(destructor:DeploySpireRequest)
  SharedDtor();
}

void DeploySpireRequest::SharedDtor() {
  spire_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spire_config_location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpoint_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void DeploySpireRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeploySpireRequest& DeploySpireRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeploySpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void DeploySpireRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DeploySpireRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spire_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spire_config_location_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpoint_root_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeploySpireRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spire_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_spire_name(), ptr, ctx, "DeploySpireRequest.spire_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spire_config_location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_spire_config_location(), ptr, ctx, "DeploySpireRequest.spire_config_location");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string checkpoint_root = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_checkpoint_root(), ptr, ctx, "DeploySpireRequest.checkpoint_root");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jwt = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_jwt(), ptr, ctx, "DeploySpireRequest.jwt");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeploySpireRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeploySpireRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestMeta meta = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spire_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_spire_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->spire_name().data(), static_cast<int>(this->spire_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "DeploySpireRequest.spire_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spire_config_location = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_spire_config_location()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->spire_config_location().data(), static_cast<int>(this->spire_config_location().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "DeploySpireRequest.spire_config_location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checkpoint_root = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_checkpoint_root()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->checkpoint_root().data(), static_cast<int>(this->checkpoint_root().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "DeploySpireRequest.checkpoint_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jwt = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_jwt()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->jwt().data(), static_cast<int>(this->jwt().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "DeploySpireRequest.jwt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeploySpireRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeploySpireRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeploySpireRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeploySpireRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::meta(this), output);
  }

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_name().data(), static_cast<int>(this->spire_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeploySpireRequest.spire_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->spire_name(), output);
  }

  // string spire_config_location = 3;
  if (this->spire_config_location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_config_location().data(), static_cast<int>(this->spire_config_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeploySpireRequest.spire_config_location");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->spire_config_location(), output);
  }

  // string checkpoint_root = 4;
  if (this->checkpoint_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->checkpoint_root().data(), static_cast<int>(this->checkpoint_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeploySpireRequest.checkpoint_root");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->checkpoint_root(), output);
  }

  // string jwt = 5;
  if (this->jwt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeploySpireRequest.jwt");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->jwt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeploySpireRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* DeploySpireRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeploySpireRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::meta(this), target);
  }

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_name().data(), static_cast<int>(this->spire_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeploySpireRequest.spire_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->spire_name(), target);
  }

  // string spire_config_location = 3;
  if (this->spire_config_location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_config_location().data(), static_cast<int>(this->spire_config_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeploySpireRequest.spire_config_location");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->spire_config_location(), target);
  }

  // string checkpoint_root = 4;
  if (this->checkpoint_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->checkpoint_root().data(), static_cast<int>(this->checkpoint_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeploySpireRequest.checkpoint_root");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->checkpoint_root(), target);
  }

  // string jwt = 5;
  if (this->jwt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeploySpireRequest.jwt");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->jwt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeploySpireRequest)
  return target;
}

size_t DeploySpireRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeploySpireRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->spire_name());
  }

  // string spire_config_location = 3;
  if (this->spire_config_location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->spire_config_location());
  }

  // string checkpoint_root = 4;
  if (this->checkpoint_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->checkpoint_root());
  }

  // string jwt = 5;
  if (this->jwt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->jwt());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeploySpireRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeploySpireRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeploySpireRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeploySpireRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeploySpireRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeploySpireRequest)
    MergeFrom(*source);
  }
}

void DeploySpireRequest::MergeFrom(const DeploySpireRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeploySpireRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spire_name().size() > 0) {

    spire_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spire_name_);
  }
  if (from.spire_config_location().size() > 0) {

    spire_config_location_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spire_config_location_);
  }
  if (from.checkpoint_root().size() > 0) {

    checkpoint_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.checkpoint_root_);
  }
  if (from.jwt().size() > 0) {

    jwt_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.jwt_);
  }
  if (from.has_meta()) {
    mutable_meta()->::RequestMeta::MergeFrom(from.meta());
  }
}

void DeploySpireRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeploySpireRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeploySpireRequest::CopyFrom(const DeploySpireRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeploySpireRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeploySpireRequest::IsInitialized() const {
  return true;
}

void DeploySpireRequest::InternalSwap(DeploySpireRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  spire_name_.Swap(&other->spire_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spire_config_location_.Swap(&other->spire_config_location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  checkpoint_root_.Swap(&other->checkpoint_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jwt_.Swap(&other->jwt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeploySpireRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeploySpireResponse::InitAsDefaultInstance() {
  ::_DeploySpireResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class DeploySpireResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const DeploySpireResponse* msg);
};

const ::ResponseStatus&
DeploySpireResponse::_Internal::status(const DeploySpireResponse* msg) {
  return *msg->status_;
}
void DeploySpireResponse::clear_status() {
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DeploySpireResponse::DeploySpireResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeploySpireResponse)
}
DeploySpireResponse::DeploySpireResponse(const DeploySpireResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:DeploySpireResponse)
}

void DeploySpireResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeploySpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  status_ = nullptr;
}

DeploySpireResponse::~DeploySpireResponse() {
  // @@protoc_insertion_point(destructor:DeploySpireResponse)
  SharedDtor();
}

void DeploySpireResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void DeploySpireResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeploySpireResponse& DeploySpireResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeploySpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void DeploySpireResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DeploySpireResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeploySpireResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeploySpireResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeploySpireResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseStatus status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeploySpireResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeploySpireResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeploySpireResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeploySpireResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeploySpireResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* DeploySpireResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeploySpireResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeploySpireResponse)
  return target;
}

size_t DeploySpireResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeploySpireResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeploySpireResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeploySpireResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeploySpireResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeploySpireResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeploySpireResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeploySpireResponse)
    MergeFrom(*source);
  }
}

void DeploySpireResponse::MergeFrom(const DeploySpireResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeploySpireResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::ResponseStatus::MergeFrom(from.status());
  }
}

void DeploySpireResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeploySpireResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeploySpireResponse::CopyFrom(const DeploySpireResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeploySpireResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeploySpireResponse::IsInitialized() const {
  return true;
}

void DeploySpireResponse::InternalSwap(DeploySpireResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeploySpireResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteSpireRequest::InitAsDefaultInstance() {
  ::_DeleteSpireRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class DeleteSpireRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const DeleteSpireRequest* msg);
};

const ::RequestMeta&
DeleteSpireRequest::_Internal::meta(const DeleteSpireRequest* msg) {
  return *msg->meta_;
}
void DeleteSpireRequest::clear_meta() {
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
DeleteSpireRequest::DeleteSpireRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteSpireRequest)
}
DeleteSpireRequest::DeleteSpireRequest(const DeleteSpireRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  spire_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.spire_name().empty()) {
    spire_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spire_name_);
  }
  jwt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.jwt().empty()) {
    jwt_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.jwt_);
  }
  if (from.has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:DeleteSpireRequest)
}

void DeleteSpireRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteSpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  spire_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  meta_ = nullptr;
}

DeleteSpireRequest::~DeleteSpireRequest() {
  // @@protoc_insertion_point(destructor:DeleteSpireRequest)
  SharedDtor();
}

void DeleteSpireRequest::SharedDtor() {
  spire_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void DeleteSpireRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteSpireRequest& DeleteSpireRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteSpireRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void DeleteSpireRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteSpireRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spire_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteSpireRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spire_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_spire_name(), ptr, ctx, "DeleteSpireRequest.spire_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jwt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_jwt(), ptr, ctx, "DeleteSpireRequest.jwt");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteSpireRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteSpireRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestMeta meta = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spire_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_spire_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->spire_name().data(), static_cast<int>(this->spire_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "DeleteSpireRequest.spire_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jwt = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_jwt()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->jwt().data(), static_cast<int>(this->jwt().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "DeleteSpireRequest.jwt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteSpireRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteSpireRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteSpireRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteSpireRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::meta(this), output);
  }

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_name().data(), static_cast<int>(this->spire_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeleteSpireRequest.spire_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->spire_name(), output);
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeleteSpireRequest.jwt");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->jwt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteSpireRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteSpireRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteSpireRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::meta(this), target);
  }

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_name().data(), static_cast<int>(this->spire_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeleteSpireRequest.spire_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->spire_name(), target);
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DeleteSpireRequest.jwt");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->jwt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteSpireRequest)
  return target;
}

size_t DeleteSpireRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteSpireRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->spire_name());
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->jwt());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSpireRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteSpireRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSpireRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteSpireRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteSpireRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteSpireRequest)
    MergeFrom(*source);
  }
}

void DeleteSpireRequest::MergeFrom(const DeleteSpireRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteSpireRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spire_name().size() > 0) {

    spire_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spire_name_);
  }
  if (from.jwt().size() > 0) {

    jwt_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.jwt_);
  }
  if (from.has_meta()) {
    mutable_meta()->::RequestMeta::MergeFrom(from.meta());
  }
}

void DeleteSpireRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteSpireRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSpireRequest::CopyFrom(const DeleteSpireRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteSpireRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSpireRequest::IsInitialized() const {
  return true;
}

void DeleteSpireRequest::InternalSwap(DeleteSpireRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  spire_name_.Swap(&other->spire_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jwt_.Swap(&other->jwt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSpireRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteSpireResponse::InitAsDefaultInstance() {
  ::_DeleteSpireResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class DeleteSpireResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const DeleteSpireResponse* msg);
};

const ::ResponseStatus&
DeleteSpireResponse::_Internal::status(const DeleteSpireResponse* msg) {
  return *msg->status_;
}
void DeleteSpireResponse::clear_status() {
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DeleteSpireResponse::DeleteSpireResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteSpireResponse)
}
DeleteSpireResponse::DeleteSpireResponse(const DeleteSpireResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:DeleteSpireResponse)
}

void DeleteSpireResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteSpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  status_ = nullptr;
}

DeleteSpireResponse::~DeleteSpireResponse() {
  // @@protoc_insertion_point(destructor:DeleteSpireResponse)
  SharedDtor();
}

void DeleteSpireResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void DeleteSpireResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteSpireResponse& DeleteSpireResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteSpireResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void DeleteSpireResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteSpireResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteSpireResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteSpireResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteSpireResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseStatus status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteSpireResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteSpireResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteSpireResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteSpireResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteSpireResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteSpireResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteSpireResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteSpireResponse)
  return target;
}

size_t DeleteSpireResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteSpireResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSpireResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteSpireResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSpireResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteSpireResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteSpireResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteSpireResponse)
    MergeFrom(*source);
  }
}

void DeleteSpireResponse::MergeFrom(const DeleteSpireResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteSpireResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::ResponseStatus::MergeFrom(from.status());
  }
}

void DeleteSpireResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteSpireResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSpireResponse::CopyFrom(const DeleteSpireResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteSpireResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSpireResponse::IsInitialized() const {
  return true;
}

void DeleteSpireResponse::InternalSwap(DeleteSpireResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSpireResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSpireDeployStatusRequest::InitAsDefaultInstance() {
  ::_GetSpireDeployStatusRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class GetSpireDeployStatusRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const GetSpireDeployStatusRequest* msg);
};

const ::RequestMeta&
GetSpireDeployStatusRequest::_Internal::meta(const GetSpireDeployStatusRequest* msg) {
  return *msg->meta_;
}
void GetSpireDeployStatusRequest::clear_meta() {
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
GetSpireDeployStatusRequest::GetSpireDeployStatusRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetSpireDeployStatusRequest)
}
GetSpireDeployStatusRequest::GetSpireDeployStatusRequest(const GetSpireDeployStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  spire_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.spire_name().empty()) {
    spire_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spire_name_);
  }
  jwt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.jwt().empty()) {
    jwt_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.jwt_);
  }
  if (from.has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetSpireDeployStatusRequest)
}

void GetSpireDeployStatusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSpireDeployStatusRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  spire_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  meta_ = nullptr;
}

GetSpireDeployStatusRequest::~GetSpireDeployStatusRequest() {
  // @@protoc_insertion_point(destructor:GetSpireDeployStatusRequest)
  SharedDtor();
}

void GetSpireDeployStatusRequest::SharedDtor() {
  spire_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void GetSpireDeployStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSpireDeployStatusRequest& GetSpireDeployStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSpireDeployStatusRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void GetSpireDeployStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSpireDeployStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spire_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwt_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetSpireDeployStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spire_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_spire_name(), ptr, ctx, "GetSpireDeployStatusRequest.spire_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jwt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_jwt(), ptr, ctx, "GetSpireDeployStatusRequest.jwt");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetSpireDeployStatusRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetSpireDeployStatusRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestMeta meta = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spire_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_spire_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->spire_name().data(), static_cast<int>(this->spire_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GetSpireDeployStatusRequest.spire_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jwt = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_jwt()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->jwt().data(), static_cast<int>(this->jwt().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GetSpireDeployStatusRequest.jwt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetSpireDeployStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetSpireDeployStatusRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetSpireDeployStatusRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetSpireDeployStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::meta(this), output);
  }

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_name().data(), static_cast<int>(this->spire_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSpireDeployStatusRequest.spire_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->spire_name(), output);
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSpireDeployStatusRequest.jwt");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->jwt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetSpireDeployStatusRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSpireDeployStatusRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetSpireDeployStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::meta(this), target);
  }

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_name().data(), static_cast<int>(this->spire_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSpireDeployStatusRequest.spire_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->spire_name(), target);
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSpireDeployStatusRequest.jwt");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->jwt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSpireDeployStatusRequest)
  return target;
}

size_t GetSpireDeployStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSpireDeployStatusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->spire_name());
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->jwt());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSpireDeployStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetSpireDeployStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpireDeployStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSpireDeployStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetSpireDeployStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetSpireDeployStatusRequest)
    MergeFrom(*source);
  }
}

void GetSpireDeployStatusRequest::MergeFrom(const GetSpireDeployStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetSpireDeployStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spire_name().size() > 0) {

    spire_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spire_name_);
  }
  if (from.jwt().size() > 0) {

    jwt_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.jwt_);
  }
  if (from.has_meta()) {
    mutable_meta()->::RequestMeta::MergeFrom(from.meta());
  }
}

void GetSpireDeployStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetSpireDeployStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpireDeployStatusRequest::CopyFrom(const GetSpireDeployStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSpireDeployStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpireDeployStatusRequest::IsInitialized() const {
  return true;
}

void GetSpireDeployStatusRequest::InternalSwap(GetSpireDeployStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  spire_name_.Swap(&other->spire_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jwt_.Swap(&other->jwt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSpireDeployStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSpireDeployStatusResponse::InitAsDefaultInstance() {
  ::_GetSpireDeployStatusResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_GetSpireDeployStatusResponse_default_instance_._instance.get_mutable()->resource_objects_status_ = const_cast< ::ResourceObjectsStatus*>(
      ::ResourceObjectsStatus::internal_default_instance());
}
class GetSpireDeployStatusResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const GetSpireDeployStatusResponse* msg);
  static const ::ResourceObjectsStatus& resource_objects_status(const GetSpireDeployStatusResponse* msg);
};

const ::ResponseStatus&
GetSpireDeployStatusResponse::_Internal::status(const GetSpireDeployStatusResponse* msg) {
  return *msg->status_;
}
const ::ResourceObjectsStatus&
GetSpireDeployStatusResponse::_Internal::resource_objects_status(const GetSpireDeployStatusResponse* msg) {
  return *msg->resource_objects_status_;
}
void GetSpireDeployStatusResponse::clear_status() {
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
GetSpireDeployStatusResponse::GetSpireDeployStatusResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetSpireDeployStatusResponse)
}
GetSpireDeployStatusResponse::GetSpireDeployStatusResponse(const GetSpireDeployStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from.has_resource_objects_status()) {
    resource_objects_status_ = new ::ResourceObjectsStatus(*from.resource_objects_status_);
  } else {
    resource_objects_status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetSpireDeployStatusResponse)
}

void GetSpireDeployStatusResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSpireDeployStatusResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resource_objects_status_) -
      reinterpret_cast<char*>(&status_)) + sizeof(resource_objects_status_));
}

GetSpireDeployStatusResponse::~GetSpireDeployStatusResponse() {
  // @@protoc_insertion_point(destructor:GetSpireDeployStatusResponse)
  SharedDtor();
}

void GetSpireDeployStatusResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete resource_objects_status_;
}

void GetSpireDeployStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSpireDeployStatusResponse& GetSpireDeployStatusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSpireDeployStatusResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void GetSpireDeployStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSpireDeployStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resource_objects_status_ != nullptr) {
    delete resource_objects_status_;
  }
  resource_objects_status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetSpireDeployStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ResourceObjectsStatus resource_objects_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_resource_objects_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetSpireDeployStatusResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetSpireDeployStatusResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseStatus status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResourceObjectsStatus resource_objects_status = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_resource_objects_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetSpireDeployStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetSpireDeployStatusResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetSpireDeployStatusResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetSpireDeployStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::status(this), output);
  }

  // .ResourceObjectsStatus resource_objects_status = 3;
  if (this->has_resource_objects_status()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::resource_objects_status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetSpireDeployStatusResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSpireDeployStatusResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetSpireDeployStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::status(this), target);
  }

  // .ResourceObjectsStatus resource_objects_status = 3;
  if (this->has_resource_objects_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::resource_objects_status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSpireDeployStatusResponse)
  return target;
}

size_t GetSpireDeployStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSpireDeployStatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .ResourceObjectsStatus resource_objects_status = 3;
  if (this->has_resource_objects_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *resource_objects_status_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSpireDeployStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetSpireDeployStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpireDeployStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSpireDeployStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetSpireDeployStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetSpireDeployStatusResponse)
    MergeFrom(*source);
  }
}

void GetSpireDeployStatusResponse::MergeFrom(const GetSpireDeployStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetSpireDeployStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::ResponseStatus::MergeFrom(from.status());
  }
  if (from.has_resource_objects_status()) {
    mutable_resource_objects_status()->::ResourceObjectsStatus::MergeFrom(from.resource_objects_status());
  }
}

void GetSpireDeployStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetSpireDeployStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpireDeployStatusResponse::CopyFrom(const GetSpireDeployStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSpireDeployStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpireDeployStatusResponse::IsInitialized() const {
  return true;
}

void GetSpireDeployStatusResponse::InternalSwap(GetSpireDeployStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
  swap(resource_objects_status_, other->resource_objects_status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSpireDeployStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResourceObjectsStatus::InitAsDefaultInstance() {
}
class ResourceObjectsStatus::_Internal {
 public:
};

ResourceObjectsStatus::ResourceObjectsStatus()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResourceObjectsStatus)
}
ResourceObjectsStatus::ResourceObjectsStatus(const ResourceObjectsStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&service_running_, &from.service_running_,
    static_cast<size_t>(reinterpret_cast<char*>(&hpa_running_) -
    reinterpret_cast<char*>(&service_running_)) + sizeof(hpa_running_));
  // @@protoc_insertion_point(copy_constructor:ResourceObjectsStatus)
}

void ResourceObjectsStatus::SharedCtor() {
  ::memset(&service_running_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hpa_running_) -
      reinterpret_cast<char*>(&service_running_)) + sizeof(hpa_running_));
}

ResourceObjectsStatus::~ResourceObjectsStatus() {
  // @@protoc_insertion_point(destructor:ResourceObjectsStatus)
  SharedDtor();
}

void ResourceObjectsStatus::SharedDtor() {
}

void ResourceObjectsStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceObjectsStatus& ResourceObjectsStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResourceObjectsStatus_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void ResourceObjectsStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ResourceObjectsStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&service_running_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hpa_running_) -
      reinterpret_cast<char*>(&service_running_)) + sizeof(hpa_running_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResourceObjectsStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool service_running = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          service_running_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool deployment_running = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          deployment_running_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool hpa_running = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          hpa_running_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResourceObjectsStatus::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResourceObjectsStatus)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool service_running = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &service_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool deployment_running = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deployment_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hpa_running = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hpa_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResourceObjectsStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResourceObjectsStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResourceObjectsStatus::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResourceObjectsStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool service_running = 1;
  if (this->service_running() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->service_running(), output);
  }

  // bool deployment_running = 2;
  if (this->deployment_running() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->deployment_running(), output);
  }

  // bool hpa_running = 3;
  if (this->hpa_running() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->hpa_running(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResourceObjectsStatus)
}

::PROTOBUF_NAMESPACE_ID::uint8* ResourceObjectsStatus::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResourceObjectsStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool service_running = 1;
  if (this->service_running() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->service_running(), target);
  }

  // bool deployment_running = 2;
  if (this->deployment_running() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->deployment_running(), target);
  }

  // bool hpa_running = 3;
  if (this->hpa_running() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->hpa_running(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResourceObjectsStatus)
  return target;
}

size_t ResourceObjectsStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResourceObjectsStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool service_running = 1;
  if (this->service_running() != 0) {
    total_size += 1 + 1;
  }

  // bool deployment_running = 2;
  if (this->deployment_running() != 0) {
    total_size += 1 + 1;
  }

  // bool hpa_running = 3;
  if (this->hpa_running() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceObjectsStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResourceObjectsStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceObjectsStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResourceObjectsStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResourceObjectsStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResourceObjectsStatus)
    MergeFrom(*source);
  }
}

void ResourceObjectsStatus::MergeFrom(const ResourceObjectsStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResourceObjectsStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_running() != 0) {
    set_service_running(from.service_running());
  }
  if (from.deployment_running() != 0) {
    set_deployment_running(from.deployment_running());
  }
  if (from.hpa_running() != 0) {
    set_hpa_running(from.hpa_running());
  }
}

void ResourceObjectsStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResourceObjectsStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceObjectsStatus::CopyFrom(const ResourceObjectsStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResourceObjectsStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceObjectsStatus::IsInitialized() const {
  return true;
}

void ResourceObjectsStatus::InternalSwap(ResourceObjectsStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(service_running_, other->service_running_);
  swap(deployment_running_, other->deployment_running_);
  swap(hpa_running_, other->hpa_running_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceObjectsStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListSpiresRequest::InitAsDefaultInstance() {
  ::_ListSpiresRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
  ::_ListSpiresRequest_default_instance_._instance.get_mutable()->filter_ = const_cast< ::ListSpiresFilter*>(
      ::ListSpiresFilter::internal_default_instance());
}
class ListSpiresRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const ListSpiresRequest* msg);
  static const ::ListSpiresFilter& filter(const ListSpiresRequest* msg);
};

const ::RequestMeta&
ListSpiresRequest::_Internal::meta(const ListSpiresRequest* msg) {
  return *msg->meta_;
}
const ::ListSpiresFilter&
ListSpiresRequest::_Internal::filter(const ListSpiresRequest* msg) {
  return *msg->filter_;
}
void ListSpiresRequest::clear_meta() {
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
ListSpiresRequest::ListSpiresRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListSpiresRequest)
}
ListSpiresRequest::ListSpiresRequest(const ListSpiresRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jwt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.jwt().empty()) {
    jwt_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.jwt_);
  }
  if (from.has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from.has_filter()) {
    filter_ = new ::ListSpiresFilter(*from.filter_);
  } else {
    filter_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ListSpiresRequest)
}

void ListSpiresRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListSpiresRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  jwt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filter_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(filter_));
}

ListSpiresRequest::~ListSpiresRequest() {
  // @@protoc_insertion_point(destructor:ListSpiresRequest)
  SharedDtor();
}

void ListSpiresRequest::SharedDtor() {
  jwt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete filter_;
}

void ListSpiresRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSpiresRequest& ListSpiresRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListSpiresRequest_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void ListSpiresRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ListSpiresRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jwt_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && filter_ != nullptr) {
    delete filter_;
  }
  filter_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSpiresRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jwt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_jwt(), ptr, ctx, "ListSpiresRequest.jwt");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ListSpiresFilter filter = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_filter(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSpiresRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListSpiresRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestMeta meta = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jwt = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_jwt()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->jwt().data(), static_cast<int>(this->jwt().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ListSpiresRequest.jwt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ListSpiresFilter filter = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListSpiresRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListSpiresRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSpiresRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListSpiresRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::meta(this), output);
  }

  // string jwt = 2;
  if (this->jwt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ListSpiresRequest.jwt");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->jwt(), output);
  }

  // .ListSpiresFilter filter = 3;
  if (this->has_filter()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::filter(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ListSpiresRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSpiresRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ListSpiresRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::meta(this), target);
  }

  // string jwt = 2;
  if (this->jwt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ListSpiresRequest.jwt");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->jwt(), target);
  }

  // .ListSpiresFilter filter = 3;
  if (this->has_filter()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::filter(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListSpiresRequest)
  return target;
}

size_t ListSpiresRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListSpiresRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string jwt = 2;
  if (this->jwt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->jwt());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .ListSpiresFilter filter = 3;
  if (this->has_filter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *filter_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSpiresRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListSpiresRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSpiresRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSpiresRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListSpiresRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListSpiresRequest)
    MergeFrom(*source);
  }
}

void ListSpiresRequest::MergeFrom(const ListSpiresRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListSpiresRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.jwt().size() > 0) {

    jwt_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.jwt_);
  }
  if (from.has_meta()) {
    mutable_meta()->::RequestMeta::MergeFrom(from.meta());
  }
  if (from.has_filter()) {
    mutable_filter()->::ListSpiresFilter::MergeFrom(from.filter());
  }
}

void ListSpiresRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListSpiresRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSpiresRequest::CopyFrom(const ListSpiresRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListSpiresRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSpiresRequest::IsInitialized() const {
  return true;
}

void ListSpiresRequest::InternalSwap(ListSpiresRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  jwt_.Swap(&other->jwt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(meta_, other->meta_);
  swap(filter_, other->filter_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSpiresRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListSpiresFilter::InitAsDefaultInstance() {
}
class ListSpiresFilter::_Internal {
 public:
};

ListSpiresFilter::ListSpiresFilter()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListSpiresFilter)
}
ListSpiresFilter::ListSpiresFilter(const ListSpiresFilter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  has_min_replicas_ = from.has_min_replicas_;
  // @@protoc_insertion_point(copy_constructor:ListSpiresFilter)
}

void ListSpiresFilter::SharedCtor() {
  has_min_replicas_ = false;
}

ListSpiresFilter::~ListSpiresFilter() {
  // @@protoc_insertion_point(destructor:ListSpiresFilter)
  SharedDtor();
}

void ListSpiresFilter::SharedDtor() {
}

void ListSpiresFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSpiresFilter& ListSpiresFilter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListSpiresFilter_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void ListSpiresFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:ListSpiresFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  has_min_replicas_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSpiresFilter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool has_min_replicas = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          has_min_replicas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSpiresFilter::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListSpiresFilter)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool has_min_replicas = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_min_replicas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListSpiresFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListSpiresFilter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSpiresFilter::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListSpiresFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool has_min_replicas = 1;
  if (this->has_min_replicas() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->has_min_replicas(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ListSpiresFilter)
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSpiresFilter::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ListSpiresFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool has_min_replicas = 1;
  if (this->has_min_replicas() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->has_min_replicas(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListSpiresFilter)
  return target;
}

size_t ListSpiresFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListSpiresFilter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool has_min_replicas = 1;
  if (this->has_min_replicas() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSpiresFilter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListSpiresFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSpiresFilter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSpiresFilter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListSpiresFilter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListSpiresFilter)
    MergeFrom(*source);
  }
}

void ListSpiresFilter::MergeFrom(const ListSpiresFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListSpiresFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min_replicas() != 0) {
    set_has_min_replicas(from.has_min_replicas());
  }
}

void ListSpiresFilter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListSpiresFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSpiresFilter::CopyFrom(const ListSpiresFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListSpiresFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSpiresFilter::IsInitialized() const {
  return true;
}

void ListSpiresFilter::InternalSwap(ListSpiresFilter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(has_min_replicas_, other->has_min_replicas_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSpiresFilter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListSpiresResponse::InitAsDefaultInstance() {
  ::_ListSpiresResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class ListSpiresResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const ListSpiresResponse* msg);
};

const ::ResponseStatus&
ListSpiresResponse::_Internal::status(const ListSpiresResponse* msg) {
  return *msg->status_;
}
void ListSpiresResponse::clear_status() {
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ListSpiresResponse::ListSpiresResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListSpiresResponse)
}
ListSpiresResponse::ListSpiresResponse(const ListSpiresResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      spire_names_(from.spire_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ListSpiresResponse)
}

void ListSpiresResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListSpiresResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  status_ = nullptr;
}

ListSpiresResponse::~ListSpiresResponse() {
  // @@protoc_insertion_point(destructor:ListSpiresResponse)
  SharedDtor();
}

void ListSpiresResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void ListSpiresResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSpiresResponse& ListSpiresResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListSpiresResponse_proto_2finference_5fcoordinator_2finference_5fcoordinator_2eproto.base);
  return *internal_default_instance();
}


void ListSpiresResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ListSpiresResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spire_names_.Clear();
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSpiresResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string spire_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_spire_names(), ptr, ctx, "ListSpiresResponse.spire_names");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSpiresResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListSpiresResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseStatus status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string spire_names = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_spire_names()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->spire_names(this->spire_names_size() - 1).data(),
            static_cast<int>(this->spire_names(this->spire_names_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ListSpiresResponse.spire_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListSpiresResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListSpiresResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSpiresResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListSpiresResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::status(this), output);
  }

  // repeated string spire_names = 2;
  for (int i = 0, n = this->spire_names_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_names(i).data(), static_cast<int>(this->spire_names(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ListSpiresResponse.spire_names");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->spire_names(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ListSpiresResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSpiresResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ListSpiresResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::status(this), target);
  }

  // repeated string spire_names = 2;
  for (int i = 0, n = this->spire_names_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->spire_names(i).data(), static_cast<int>(this->spire_names(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ListSpiresResponse.spire_names");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(2, this->spire_names(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListSpiresResponse)
  return target;
}

size_t ListSpiresResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListSpiresResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string spire_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->spire_names_size());
  for (int i = 0, n = this->spire_names_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->spire_names(i));
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSpiresResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListSpiresResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSpiresResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSpiresResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListSpiresResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListSpiresResponse)
    MergeFrom(*source);
  }
}

void ListSpiresResponse::MergeFrom(const ListSpiresResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListSpiresResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spire_names_.MergeFrom(from.spire_names_);
  if (from.has_status()) {
    mutable_status()->::ResponseStatus::MergeFrom(from.status());
  }
}

void ListSpiresResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListSpiresResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSpiresResponse::CopyFrom(const ListSpiresResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListSpiresResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSpiresResponse::IsInitialized() const {
  return true;
}

void ListSpiresResponse::InternalSwap(ListSpiresResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  spire_names_.InternalSwap(CastToBase(&other->spire_names_));
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSpiresResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::DeploySpireRequest* Arena::CreateMaybeMessage< ::DeploySpireRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DeploySpireRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::DeploySpireResponse* Arena::CreateMaybeMessage< ::DeploySpireResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DeploySpireResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::DeleteSpireRequest* Arena::CreateMaybeMessage< ::DeleteSpireRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DeleteSpireRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::DeleteSpireResponse* Arena::CreateMaybeMessage< ::DeleteSpireResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DeleteSpireResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetSpireDeployStatusRequest* Arena::CreateMaybeMessage< ::GetSpireDeployStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::GetSpireDeployStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetSpireDeployStatusResponse* Arena::CreateMaybeMessage< ::GetSpireDeployStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::GetSpireDeployStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ResourceObjectsStatus* Arena::CreateMaybeMessage< ::ResourceObjectsStatus >(Arena* arena) {
  return Arena::CreateInternal< ::ResourceObjectsStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ListSpiresRequest* Arena::CreateMaybeMessage< ::ListSpiresRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ListSpiresRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ListSpiresFilter* Arena::CreateMaybeMessage< ::ListSpiresFilter >(Arena* arena) {
  return Arena::CreateInternal< ::ListSpiresFilter >(arena);
}
template<> PROTOBUF_NOINLINE ::ListSpiresResponse* Arena::CreateMaybeMessage< ::ListSpiresResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ListSpiresResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
